body, html {
    overflow-x: visible;
}

/*-- -------------------------- -->
<---        Content Page        -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {

    #content-page-1401 {
        padding: var(--sectionPadding);
        background-color: #f7f7f7;
        /* clips the wave background from causing overflow issues when it goes off screen */
        // overflow: hidden;
        position: relative;
        z-index: 1;
        overflow: visible;

        .cs-container {
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: auto;
            max-width: 80rem;
            width: 100%;
            gap: clamp(2.5rem, 4vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (738/16rem);
            height: 100%; /* Or a specific value like 500px */
            overflow: visible; /* Ensure no clipping on the parent */
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-bold {
            font-weight: 900;
        }

        h2,
        h3,
        h4,
        h5,
        h6 {
            font-weight: 700;
            text-align: inherit;
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
        }

        h2 {
            font-size: (32/16rem);
            margin-top: (32/16rem);
        }

        h3 {
            font-size: (24/16rem);
            color: var(--primary);
        }

        h4,
        h5,
        h6 {
            font-size: (20/16rem);
        }

        .cs-button-solid {
            margin-bottom: (32/16rem);
        }

        .cs-no-margin {
            margin: 0;
        }

        .cs-color {
            color: var(--primary);
        }

        p {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            margin: 0 0 (16/16rem) 0;
            color: var(--bodyTextColor);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }

            a {
                font-size: inherit;
                line-height: inherit;
                text-decoration: underline;
                color: var(--primary);
                filter: brightness(120%);
            }
        }

        ol,
        ul {
            padding-left: (24/16rem);
            margin: 0 0 (32/16rem) 0;
            color: var(--bodyTextColor);
            display: flex;
            flex-direction: column;
            gap: (16/16rem);
        }

        ul {
            li {
                list-style: none;
                color: inherit;
                position: relative;

                &:before {
                    /* custom list bullet */
                    content: "";
                    width: 3px;
                    height: 3px;
                    background: currentColor;
                    opacity: 1;
                    border-radius: 50%;
                    position: absolute;
                    display: block;
                    top: (10/16rem);
                    left: (-12/16rem);
                }
            }
        }

        img {
            width: 100%;
            height: auto;
            display: block;
        }

        .cs-image-group {
        position: relative;
        display: none;
        flex-direction: column;
        width: 100%;
        gap: clamp(1rem, 2.6vw, 1.25rem);
        }

        .cs-flex {
            position: relative;

        }

        .cs-background {
            width: 100%;
            /* 32px - 48px */
            border-radius: 1.9rem;
            /* clips the corners of the children around the border radius */
            /* makes it cover the parent dimensions */
            object-fit: cover;
            display: block;
            height: 25rem;
            // border: 1rem solid white;

            img {
                width: 100%;
                height: 100%;
                /* makes it cover the parent like a backgorund image */
                object-fit: cover;
                display: block;
                border-radius: 1rem;            }
        }

        .cs-box {
            text-align: left;
            width: 100%;
            max-width: (200/16rem);
            padding: (32/16rem);
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            background-color: var(--primary);
            /* 48px - 80px */
            border-radius: (8/16rem);
            display: none;
            flex-direction: column;
            align-items: flex-start;
            gap: (24/16rem);
            position: absolute;
            /* 12px - 20px */
            right: clamp(0.75rem, 1.9vw, 1.5rem);
            /* 12px - 20px */
            bottom: clamp(0.75rem, 1.9vw, 1.5rem);
        }

        .cs-box-icon {
            width: (60/16rem);
            height: auto;
            display: block;
        }

        .cs-desc {
            font-size: (20/16rem);
            line-height: 1.2em;
            text-align: inherit;
            font-weight: 700;
            width: 100%;
            margin: 0;
            color: var(--bodyTextColorWhite);
        }

        .cs-card-group {
            width: 100%;
            max-width: (630/16rem);
            margin: 0 0 (24/16rem) 0;
            padding: 0;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(15.265rem, 1fr));
            align-items: center;
            gap: clamp(1rem, 2vw, 1.25rem);
        }

        .cs-item {
            list-style: none;
            /* 16px - 24px */
            padding: clamp(1rem, 3vw, 1.5rem);
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            background-color: #fff;
            border-radius: (16/16rem);
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: (12/16rem);
            box-shadow: 2px 2px 10px #0000000f;


            &:before {
                display: none;
            }
        }

        .cs-h3 {
            font-size: (20/16rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0;
            color: var(--headerColor);
            display: flex;
            justify-content: flex-start;
            align-items: center;
            gap: (8/16rem);
        }

        // .cs-picture {
        //     width: (60/16rem);
        //     height: (60/16rem);
        //     display: flex;
        //     justify-content: center;
        //     border-radius: 50%;
        //     align-items: center;
        //     position: relative;
        //     background-color: var(--svgBackground);
        //     flex: none;
        //     margin-right: .5rem;
        // }

        .cs-h3-icon {
            width: (30/16rem);
            height: auto;
            margin-right: .5rem;
        }

        .cs-item-text {
            font-size: (14/16rem);
            line-height: 1.5em;
            margin: 0;
            color: var(--bodyTextColor);

            &:last-of-type {
                margin: 0;
            }
        }

        .cs-ul {
            width: 100%;
            margin: 0 0 (24/16rem) 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: (12/16rem);
        }

        .cs-li {
            font-size: var(--bodyFontSize);
            list-style: none;
            line-height: 1.5em;
            width: 100%;
            color: var(--bodyTextColor);
            display: flex;
            justify-content: flex-start;
            /* push icon top the top so if the list item goes to two lines the icon stays at the top */
            align-items: flex-start;
            gap: (8/16rem);
        }

        .cs-icon {
            width: (24/16rem);
            height: auto;
            /* adds extra space between the icon and top of parent so it's more centered */
            margin-top: 1px;
            display: block;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #content-page-1401 {
        .cs-container {
            flex-direction: row;
            justify-content: space-between;
            align-items: flex-start;
        }

        .cs-content {
            width: 50%;
            max-width: (674/16rem);
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-image-group {
            order: 2;
            position: sticky;
            top: 12.5rem;
            display: flex
    ;
            max-width: 33.875rem;
            width: 44%;
        }
    }
}

/* Desktop - 1200px */
@media only screen and (min-width: 75rem) {
    #content-page-1401 {
        // overflow: visible;

        .cs-content {
            width: 53%;
            height: 100%; /* Or a specific value like 500px */
            overflow: visible; /* Ensure no clipping on the parent */
        }

        .cs-image-group {
            width: 43%;
        }

        .cs-box {
            display: flex;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #content-page-1401 {
            background-color: var(--dark);

            .cs-title,
            .cs-text,
            h2,
            h3,
            h4,
            h5,
            h6,
            li,
            p {
                color: var(--bodyTextColorWhite);
            }
            .cs-color,
            a {
                color: var(--primaryLight);
            }

            p,
            li {
                color: #ebebeb;
            }

            .cs-item {
                background-color: rgba(0, 0, 0, 0.2);
                border-color: rgba(255, 255, 255, 0.2);
            }

            .cs-h3 {
                color: var(--bodyTextColorWhite);
            }

            .cs-icon {
                filter: grayscale(1) brightness(1000%);
            }

            .cs-picture {
                border-color: var(--dark);
                background-color: var(--dark);
            }

            .cs-bubbles {
                &:before {
                    border-color: rgba(255, 255, 255, 0.2);
                }
            }
        }
    }
}

                                

                                